name: Tests

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: '45 2 * * *'

env:
  TESTMO_URL: ${{ vars.TESTMO_URL }}
  TESTMO_PROJECT_ID: ${{ vars.TESTMO_PROJECT_ID }}
  TESTMO_TOKEN: ${{ secrets.TESTMO_TOKEN }}

jobs:
  test-init:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 19

      - name: Echo version to summary
        run: |
          VERSION="$(docker run --rm cr.yandex/yc/yandex-docker-local-ydb:trunk /ydbd -V)"
          
          cat <<EOF >> $GITHUB_STEP_SUMMARY
          
          
          ## YDB version in details:
          \`\`\`
          $VERSION
          \`\`\`
          EOF

  test:
    needs: [test-init]
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        tests:
          - ./apps/urlsh
          - ./languages/go/libpq
          - ./languages/python/psycopg2

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 19

      - run: scripts/install-tools.bash

      - run: bash ${{ matrix.tests }}/run-test.bash

      - run: |
          echo "Postprocessing results"
          sudo chmod -R a+rw ${{ matrix.tests }}/test-result
          ./scripts/post-process-report.bash "${{ matrix.tests }}"
          
          echo "Remove raw results"
          rm -rf /test-result/raw

      - uses: actions/upload-artifact@v3
        name: "upload test result artifacts"
        with:
          name: test-result
          path: "**/test-result/*.xml"

  test-complete:
    runs-on: ubuntu-20.04
    needs: [test-init, test]
#    if: always()
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 19

      - name: Download a test-results
        uses: actions/download-artifact@v3
        with:
          name: test-result

      - run: |
          scripts/install-tools.bash
          scripts/upload-test-result.bash
        env:
          TESTMO_RUN_ID: ${{ needs.test-init.outputs.testmo-run-id }}
